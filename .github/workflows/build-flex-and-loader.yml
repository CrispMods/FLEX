name: Build FLEX + Loader (arm64 iOS)
on: { workflow_dispatch: {} }

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout FLEX upstream
        uses: actions/checkout@v4
        with:
          repository: FLEXTool/FLEX
          path: flex-src

      - name: Create loader.m on runner
        run: |
          mkdir -p loader-src
          cat > loader-src/loader.m <<'EOF'
          #import <Foundation/Foundation.h>
          #import <UIKit/UIKit.h>
          #import <dlfcn.h>

          static void presentExplorerWithManager(id mgr) {
              if (!mgr) return;

              // define selector list here, not inside block
              SEL cands[] = {
                  NSSelectorFromString(@"showExplorer"),
                  NSSelectorFromString(@"show"),
                  NSSelectorFromString(@"open"),
                  NSSelectorFromString(@"presentExplorer"),
              };
              int candCount = sizeof(cands)/sizeof(cands[0]);

              dispatch_async(dispatch_get_main_queue(), ^{
                  dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(2.0 * NSEC_PER_SEC)),
                                 dispatch_get_main_queue(), ^{
                      for (int i = 0; i < candCount; i++) {
                          SEL sel = cands[i];
                          if ([mgr respondsToSelector:sel]) {
                              @try {
                                  #pragma clang diagnostic push
                                  #pragma clang diagnostic ignored "-Warc-performSelector-leaks"
                                  [mgr performSelector:sel];
                                  #pragma clang diagnostic pop
                                  NSLog(@"[Loader] invoked %@", NSStringFromSelector(sel));
                              } @catch (NSException *e) {
                                  NSLog(@"[Loader] exception: %@", e);
                              }
                              return;
                          }
                      }
                      NSLog(@"[Loader] no known present selector worked");
                  });
              });
          }

          static void tryDlopenPath(NSString *path) {
              if (![[NSFileManager defaultManager] fileExistsAtPath:path]) {
                  NSLog(@"[Loader] not found: %@", path);
                  return;
              }
              void *h = dlopen(path.UTF8String, RTLD_NOW | RTLD_LOCAL);
              if (!h) {
                  NSLog(@"[Loader] dlopen failed for %@: %s", path, dlerror());
                  return;
              }
              NSLog(@"[Loader] dlopen OK: %@", path);

              Class FlexMgr = NSClassFromString(@"FLEXManager");
              if (FlexMgr) {
                  id mgr = [FlexMgr performSelector:@selector(sharedManager)];
                  if (mgr) { presentExplorerWithManager(mgr); return; }
              }
              NSLog(@"[Loader] explorer manager not found");
          }

          static void loadAndPresent() {
              @autoreleasepool {
                  NSString *bundlePath = [[NSBundle mainBundle] bundlePath];
                  NSArray<NSString *> *paths = @[
                      [bundlePath stringByAppendingPathComponent:@"Frameworks/FLEX.framework/FLEX"],
                      [bundlePath stringByAppendingPathComponent:@"Frameworks/FLEX.dylib"]
                  ];
                  for (NSString *p in paths) tryDlopenPath(p);
              }
          }

          __attribute__((constructor))
          static void loader_constructor() {
              dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
                  sleep(1);
                  loadAndPresent();
              });
          }
          EOF

      - name: Show toolchain
        run: |
          xcodebuild -version
          xcrun --sdk iphoneos --show-sdk-path

      - name: Build FLEX.framework for device
        working-directory: flex-src
        run: |
          set -e
          xcodebuild -project FLEX.xcodeproj -scheme FLEX -configuration Release -sdk iphoneos BUILD_DIR=build BUILD_ROOT=build clean build
          ls -la build/Release-iphoneos || true

      - name: Build Loader.dylib
        run: |
          SDK="$(xcrun --sdk iphoneos --show-sdk-path)"
          clang -arch arm64 -isysroot "$SDK" -ObjC -fobjc-arc -dynamiclib loader-src/loader.m -o Loader.dylib
          file Loader.dylib || true
          lipo -info Loader.dylib || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: flex-and-loader
          path: |
            flex-src/build/Release-iphoneos/FLEX.framework
            Loader.dylib
